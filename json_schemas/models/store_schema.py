# generated by datamodel-codegen:
#   filename:  store_schema.json
#   timestamp: 2025-07-16T02:15:37+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field
from pydantic_partial import create_partial_model


class Address(BaseModel):
    street: str = Field(..., title='Street')
    city: str = Field(..., title='City')
    zip_code: str = Field(..., title='Zip Code')
    country: Optional[str] = Field(None, title='Country')


class Contact(BaseModel):
    phone: str = Field(..., title='Phone')
    email: Optional[str] = Field(None, title='Email')


class Product(BaseModel):
    product_id: int = Field(..., title='Product Id')
    name: str = Field(..., title='Name')
    price: float = Field(..., title='Price')
    tags: Optional[List[str]] = Field([], title='Tags')


class User(BaseModel):
    name: str = Field(..., title='Name')
    age: int = Field(..., title='Age')
    address: Address
    contacts: List[Contact] = Field(..., title='Contacts')


class Order(BaseModel):
    order_id: int = Field(..., title='Order Id')
    user: User
    products: List[Product] = Field(..., title='Products')
    status: str = Field(..., title='Status')


class Review(BaseModel):
    review_id: int = Field(..., title='Review Id')
    user: User
    product: Product
    rating: int = Field(..., title='Rating')
    comment: Optional[str] = Field(None, title='Comment')


class Store(BaseModel):
    store_id: int = Field(..., title='Store Id')
    name: str = Field(..., title='Name')
    address: Address
    orders: List[Order] = Field(..., title='Orders')
    reviews: List[Review] = Field(..., title='Reviews')

PartialAddress = create_partial_model(Address, recursive=True)

PartialContact = create_partial_model(Contact, recursive=True)

PartialProduct = create_partial_model(Product, recursive=True)

PartialUser = create_partial_model(User, recursive=True)

PartialOrder = create_partial_model(Order, recursive=True)

PartialReview = create_partial_model(Review, recursive=True)

PartialStore = create_partial_model(Store, recursive=True)
